openapi: 3.0.3
info:
  title: Swagger Fullstack - OpenAPI 3.0
  description: |-
    Mock API documentation
  version: 1.0.0
servers:
  - url: https://jsonplaceholder.typicode.com
tags:
  - name: post
    description: Operaciones con publicaciones
  - name: comment
    description: Comentarios
    
paths:
  /posts:
    get:
      tags:
        - post
      summary: Busca publicaciones
      description: Busca todos las publicaciones y permite filtrarlas por usuario
      operationId: getposts
      parameters:
        - name: userId
          in: query
          description: Identificador usuario
          required: false
          schema:
            type: integer
            format: int64      
      responses:
        '200':
          description: Operación exitosa
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/post'          
        '400':
          description: Entrada incorrecta
        '404':
          description: Recurso no encontrado
    post:
      tags:
        - post
      summary: Crear una publicación
      description: Crear una publicación
      operationId: createpost
      requestBody:
        description: Publicación creada
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/post'
        required: true
      responses:
        '200':
          description: Operación exitosa
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post'          
        '400':
          description: Entrada incorrecta
        '404':
          description: Recurso no encontrado
        '422':
          description: Error de validación  
  /posts/{postId}:
    get:
      tags:
        - post
      summary: Busca una publicación
      description: Busca una publicación existente
      operationId: getpostById
      parameters:
        - name: postId
          in: path
          description: ID publicación a obtener
          required: true
          schema:
            type: integer
            format: int64      
      responses:
        '200':
          description: Operación exitosa
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post'          
        '400':
          description: Entrada incorrecta
        '404':
          description: Recurso no encontrado
    put:
      tags:
        - post
      summary: Actualiza una publicación
      description: Actualiza una publicación existente
      operationId: updatepostById
      parameters:
        - name: postId
          in: path
          description: ID publicación a actualizar
          required: true
          schema:
            type: integer
            format: int64      
      requestBody:
        description: Actualiza un post existente
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/post'
        required: true
      responses:
        '200':
          description: Opeación exitosa
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post'          
        '400':
          description: Entrada incorrecta
        '404':
          description: Recurso no encontrado
        '422':
          description: Error de validación
    delete:
      tags:
        - post
      summary: Borra una publicación
      description: Borra una publicación existente
      operationId: deletepostById
      parameters:
        - name: postId
          in: path
          description: ID publicación a borrar
          required: true
          schema:
            type: integer
            format: int64      
      responses:
        '200':
          description: Operación exitosa
        '400':
          description: Entrada incorrecta
        '404':
          description: Recurso no encontrado
  /comments:
    get:
      tags:
        - comment
      summary: Busca comentarios
      description: Busca todos los comentarios
      operationId: getcomments
      parameters:
        - name: postId
          in: query
          description: Identificador del post
          required: false
          schema:
            type: integer
            format: int64      
        - name: name
          in: query
          description: Nombre
          schema:
            type: string
        - name: email
          in: query
          description: email
          schema:
            type: string	
      responses:
        '200':
          description: Operación exitosa
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/comment'          
        '400':
          description: Entrada incorrecta
        '404':
          description: Recurso no encontrado
    post:
      tags:
        - comment
      summary: Crear una comentario
      description: Crear una comentario
      operationId: createcomment
      requestBody:
        description: Comentario creado
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/comment'
        required: true
      responses:
        '200':
          description: Operación exitosa
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/comment'          
        '400':
          description: Entrada incorrecta
        '404':
          description: Recurso no encontrado
        '422':
          description: Error de validación  
  /comments/{commentId}:
    get:
      tags:
        - comment
      summary: Busca un comentario
      description: Busca un comentario existente
      operationId: getcommentById
      parameters:
        - name: commentId
          in: path
          description: ID comentario a obtener
          required: true
          schema:
            type: integer
            format: int64      
      responses:
        '200':
          description: Operación exitosa
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/comment'          
        '400':
          description: Entrada incorrecta
        '404':
          description: Recurso no encontrado
    put:
      tags:
        - comment
      summary: Actualiza un comentario
      description: Actualiza un comentario existente
      operationId: updatecommentById
      parameters:
        - name: commentId
          in: path
          description: ID comentario a actualizar
          required: true
          schema:
            type: integer
            format: int64      
      requestBody:
        description: Actualiza un comment existente
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/comment'
        required: true
      responses:
        '200':
          description: Opeación exitosa
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/comment'          
        '400':
          description: Entrada incorrecta
        '404':
          description: Recurso no encontrado
        '422':
          description: Error de validación
    delete:
      tags:
        - comment
      summary: Borra un comentario
      description: Borra un comentario existente
      operationId: deletecommentById
      parameters:
        - name: commentId
          in: path
          description: ID comentario a borrar
          required: true
          schema:
            type: integer
            format: int64      
      responses:
        '200':
          description: Operación exitosa
        '400':
          description: Entrada incorrecta
        '404':
          description: Recurso no encontrado
components:
  schemas:
    post:
      type: object
      description: Publicación
      properties:
        id:
          type: integer
          format: int64
          example: 10
        userId:
          type: integer
          format: int64
          example: 10
        title:
          type: string
          example: "Título de ejemplo"
        body:
          type: string
          format: "Body de ejemplo"          
    comment:
      type: object
      description: Comentario
      properties:
        id:
          type: integer
          format: int64
          example: 10
        postId:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: "Juan Gómez"
        email:
          type: string
          example: "ppppp@gmail.com"          
        body:
          type: string
          format: "Comentario...."          

