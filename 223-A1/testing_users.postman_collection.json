{
	"info": {
		"_postman_id": "8992daf8-833a-4978-8f96-4291421b9145",
		"name": "testing_users",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "14670358"
	},
	"item": [
		{
			"name": "Crear un usuario",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"OK - Respuesta\", function () {\r",
							"    pm.response.to.have.status(201)\r",
							"});\r",
							"pm.test(\"OK - Cabecera JSON\", function () {\r",
							"    const contentType = pm.response.headers.get(\"Content-Type\");\r",
							"    pm.expect(contentType).to.include(\"application/json\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"id\": 1,\n    \"name\": \"Chema\",\n    \"username\": \"SEJCL\",\n    \"email\": \"pepe@gotera.com\",\n    \"address\": {\n        \"street\": \"Avenida Cruz Roja\",\n        \"suite\": \"Apt. 33\",\n        \"city\": \"Sevilla\",\n        \"zipcode\": \"41009\",\n        \"geo\": {\n            \"lat\": \"-12.4\",\n            \"lng\": \"8.12\"\n        }\n    },\n    \"phone\": \"+22 999 878 432 32\",\n    \"website\": \"www.getronics.com\",\n    \"company\": {\n        \"name\": \"Getronics\",\n        \"catchPhrase\": \"Empowering your digital journey\",\n        \"bs\": \"e-markets\"\n    }\n}",
					"options": {
						"raw": {
							"headerFamily": "json",
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users"
					]
				},
				"description": "Crear una publicación"
			},
			"response": [
				{
					"name": "Operación exitosa",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"<long>\",\n  \"userId\": \"<long>\",\n  \"title\": \"<string>\",\n  \"body\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/posts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"posts"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"id\": \"<long>\",\n  \"userId\": \"<long>\",\n  \"title\": \"<string>\",\n  \"body\": \"<string>\"\n}"
				},
				{
					"name": "Entrada incorrecta",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"<long>\",\n  \"userId\": \"<long>\",\n  \"title\": \"<string>\",\n  \"body\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/posts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"posts"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Recurso no encontrado",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"<long>\",\n  \"userId\": \"<long>\",\n  \"title\": \"<string>\",\n  \"body\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/posts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"posts"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Error de validación",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"<long>\",\n  \"userId\": \"<long>\",\n  \"title\": \"<string>\",\n  \"body\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/posts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"posts"
							]
						}
					},
					"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
					"code": 422,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Busca usuarios",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"OK - Respuesta\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"});\r",
							"pm.test(\"OK - Cabecera JSON\", function () {\r",
							"    const contentType = pm.response.headers.get(\"Content-Type\");\r",
							"    pm.expect(contentType).to.include(\"application/json\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/users/?userId=1",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						""
					],
					"query": [
						{
							"key": "userId",
							"value": "1",
							"description": "Identificador usuario"
						}
					]
				},
				"description": "Busca todos las publicaciones y permite filtrarlas por usuario"
			},
			"response": [
				{
					"name": "Operación exitosa",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/posts?userId=<long>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"posts"
							],
							"query": [
								{
									"key": "userId",
									"value": "<long>",
									"description": "Identificador usuario"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n  {\n    \"id\": \"<long>\",\n    \"userId\": \"<long>\",\n    \"title\": \"<string>\",\n    \"body\": \"<string>\"\n  },\n  {\n    \"id\": \"<long>\",\n    \"userId\": \"<long>\",\n    \"title\": \"<string>\",\n    \"body\": \"<string>\"\n  }\n]"
				},
				{
					"name": "Entrada incorrecta",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/posts?userId=<long>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"posts"
							],
							"query": [
								{
									"key": "userId",
									"value": "<long>",
									"description": "Identificador usuario"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Recurso no encontrado",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/posts?userId=<long>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"posts"
							],
							"query": [
								{
									"key": "userId",
									"value": "<long>",
									"description": "Identificador usuario"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Busca un usuario",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"OK Respuesta\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"});\r",
							"pm.test(\"OK - Email de la respuesta\", function () {\r",
							"    const idPathParam = pm.request.url.path[1];\r",
							"    if (idPathParam === \"1\") {\r",
							"        pm.test(\"Ejecutar el test solo si id es 1\", function () {\r",
							"            const correoEsperado = \"Sincere@april.biz\";\r",
							"            const respuestaJson = pm.response.json();\r",
							"            pm.expect(respuestaJson).to.have.property(\"email\");\r",
							"            pm.expect(respuestaJson.email).to.eql(correoEsperado);\r",
							"        });\r",
							"    } else {\r",
							"        console.log(\"No se cumple la condición para ejecutar el test.\");\r",
							"    }\r",
							"});\r",
							"pm.test(\"OK - Cabecera JSON\", function () {\r",
							"    const contentType = pm.response.headers.get(\"Content-Type\");\r",
							"    pm.expect(contentType).to.include(\"application/json\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/users/:userId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":userId"
					],
					"variable": [
						{
							"key": "userId",
							"value": "1"
						}
					]
				},
				"description": "Busca una publicación existente"
			},
			"response": [
				{
					"name": "Operación exitosa",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/posts/:postId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"posts",
								":postId"
							],
							"variable": [
								{
									"key": "postId"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"id\": \"<long>\",\n  \"userId\": \"<long>\",\n  \"title\": \"<string>\",\n  \"body\": \"<string>\"\n}"
				},
				{
					"name": "Entrada incorrecta",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/posts/:postId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"posts",
								":postId"
							],
							"variable": [
								{
									"key": "postId"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Recurso no encontrado",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/posts/:postId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"posts",
								":postId"
							],
							"variable": [
								{
									"key": "postId"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Borra un usuario",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"OK - Respuesta\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"});\r",
							"pm.test(\"OK - Cabecera JSON\", function () {\r",
							"    const contentType = pm.response.headers.get(\"Content-Type\");\r",
							"    pm.expect(contentType).to.include(\"application/json\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/users/:userId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":userId"
					],
					"variable": [
						{
							"key": "userId",
							"value": "3"
						}
					]
				},
				"description": "Borra una publicación existente"
			},
			"response": [
				{
					"name": "Operación exitosa",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/posts/:postId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"posts",
								":postId"
							],
							"variable": [
								{
									"key": "postId"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Entrada incorrecta",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/posts/:postId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"posts",
								":postId"
							],
							"variable": [
								{
									"key": "postId"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Recurso no encontrado",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/posts/:postId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"posts",
								":postId"
							],
							"variable": [
								{
									"key": "postId"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Actualiza un usuario",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"OK - Respuesta\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"});\r",
							"pm.test(\"OK - Cabecera JSON\", function () {\r",
							"    const contentType = pm.response.headers.get(\"Content-Type\");\r",
							"    pm.expect(contentType).to.include(\"application/json\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"id\": 11,\n    \"name\": \"Chema modificado\",\n    \"username\": \"SEJCL\",\n    \"email\": \"pepe@gotera.com\",\n    \"address\": {\n        \"street\": \"Avenida Cruz Roja n33\",\n        \"suite\": \"Apt. 33\",\n        \"city\": \"Sevilla\",\n        \"zipcode\": \"41009\",\n        \"geo\": {\n            \"lat\": \"-12.4\",\n            \"lng\": \"8.12\"\n        }\n    },\n    \"phone\": \"+22 999 878 432 32\",\n    \"website\": \"www.pepegotera.com\",\n    \"company\": {\n        \"name\": \"Getronics\",\n        \"catchPhrase\": \"Hola caracola 22\",\n        \"bs\": \"n/a\"\n    }\n}",
					"options": {
						"raw": {
							"headerFamily": "json",
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users/:userId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":userId"
					],
					"variable": [
						{
							"key": "userId",
							"value": "3"
						}
					]
				},
				"description": "Actualiza una publicación existente"
			},
			"response": [
				{
					"name": "Opeación exitosa",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"<long>\",\n  \"userId\": \"<long>\",\n  \"title\": \"<string>\",\n  \"body\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/posts/:postId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"posts",
								":postId"
							],
							"variable": [
								{
									"key": "postId"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"id\": \"<long>\",\n  \"userId\": \"<long>\",\n  \"title\": \"<string>\",\n  \"body\": \"<string>\"\n}"
				},
				{
					"name": "Entrada incorrecta",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"<long>\",\n  \"userId\": \"<long>\",\n  \"title\": \"<string>\",\n  \"body\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/posts/:postId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"posts",
								":postId"
							],
							"variable": [
								{
									"key": "postId"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Recurso no encontrado",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"<long>\",\n  \"userId\": \"<long>\",\n  \"title\": \"<string>\",\n  \"body\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/posts/:postId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"posts",
								":postId"
							],
							"variable": [
								{
									"key": "postId"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Error de validación",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"<long>\",\n  \"userId\": \"<long>\",\n  \"title\": \"<string>\",\n  \"body\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/posts/:postId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"posts",
								":postId"
							],
							"variable": [
								{
									"key": "postId"
								}
							]
						}
					},
					"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
					"code": 422,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://jsonplaceholder.typicode.com",
			"type": "string"
		}
	]
}